# Target directory
CERT_PATH="/etc/nginx/ssl/"
# CERT_PATH="/etc/apache2/ssl/"


# List of cert files to get, separated by space character
CERT_FILES="wildcard.local.mytld.com.fullchain wildcard.local.mytld.com.key"

# select pull script, either ftp or scp
USE_SCRIPT='ftp.sh'
# USE_SCRIPT='scp.sh'

# if retrieving from FTP
FTP_HOST='100.100.10.1'
FTP_USER='sample'
FTP_PASSWD='sample'
FTP_CERTS_DIR='certs'

# if retrieving via SCP
# SCP_HOST='100.100.10.1'
# SCP_USER='sample'
# SCP_CERTS_DIR='/certs'
# SCP_PASSWD='sample' # requires sshpass, apt install sshpass
## SCP_KEY='key_file.pem' # if no SCP_PASSWD, provide keyfile

# command to issue after new ssl certs have been retrieved;
# provide full path to bins, since this may be run in cron
# Examples:
# RESTART_CMD='/usr/sbin/service nginx reload && echo "Service reloaded"'
# RESTART_CMD='/usr/sbin/service apache2 reload && echo "Service reloaded"'
# RESTART_CMD='docker exec -it docker-app-1 bash -c "/usr/sbin/service apache2 reload" && echo "apache2 inside docker reloaded"'
RESTART_CMD='echo "No service reload"'